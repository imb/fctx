++++++++++++
FCTX Changes
++++++++++++

Whats new in FCTX 1.4.3
-----------------------

Many thanks to suggestions from RhysU (http://github.com/RhysU) for
his patches to make FCTX better.

 - ENH: Ability to use fct_chk in an if conditional. You can then
   conditionally execute further checks based on the first check.
 - ENH: Allow user to mutate main's argv (useful for initializing
   libraries. Thanks to RhysU.
 - FIX: Fix to handle simple unit test case (catches segmentation
   fault).
 - FIX: Warning corrections for GCC 4.3.4, Intell 11.1. Thanks to
   RhysU.

Whats new in FCTX 1.4.2
-----------------------

 - FIX: DOC - Updated Getting Started sample to use FCT_QTEST_END.
   Thanks to RhysU for the fix.

Whats new in FCTX 1.4.1
-----------------------

 - FIX: Compiler regression with MSV compilers. FCTX should be back to
   compiling for the MSVC.

Whats new in FCTX 1.4.0
-----------------------

 - ENH: Custom logger. You can now write and install a customized
   logger. See the examples/custom_logger directory within the source
   for details.
 - ENH: Test and Test Suites grow their own duration value. Getting the
   time for a particular test or test suite is a common logging
   operation. In order to simplify logging the test and test suite
   objects will now take care to report their durations.
 - FIX: Fix warnings generated for a "blank test" (i.e. "FCT_BGN() {}
   FCT_END()").

Whats new in FCTX 1.3.2
-----------------------

 - FIX: Use size_t instead of int to remove some nuisance warnings on a
   64 bit compiler.

Whats new in FCTX 1.3.1
-----------------------

 - FIX: JUnit logger now displays the correct XML header.

Whats new in FCTX 1.3.0
-----------------------

 - ENH: Add JUnit support thanks to timrule (http://github.com/timrule).
   (http://github.com/imb/fctx/issues/closed#issue/10)
 - ENH (#3): Add helpful string checks. These functions will produce
   error messages that are relevant.
   (http://github.com/imb/fctx/issues/closed#issue/3)
     - New fct_chk_incl_str, will check that a string includes a
       substring and report an useful error message if it does not
       include the substring.
     - New fct_chk_incl_istr, case insensitive variant of
       fct_chk_incl_str.
     - New fct_chk_excl_str, will check that a string does not include a
       substring and report an useful error message if it is found.
     - New fct_chk_excl_istr, case insensitive variant of
       fct_chk_excl_str.
     - New fct_chk_startswith_str, will check if a string starts with a
       given substring, and report an helpful error otherwise. Also
       introduces a fctstr_startswith backend function.
     - New fct_chk_empty_str, will check if a string is empty.
     - New fct_chk_full_str, will check if string is full.
 - ENH: Reduced malloc's for exceptional cases. Since failed tests are,
   as a rule exceptional, there was no need to allocate memory for a
   list to hold error results until such time as an error occurs. This
   lead to a relatively minor speed up.


Whats new in FCTX 1.2.1
-----------------------

This release is the first release using Git hosted at GitHub 
(http://github.com/imb/fctx). As such a lot of the changes in this release
had to do with converting from BAZZAR to GIT. Namely normalizing the
line endings so the are standard across the Git repository.
 
 - FIX (#11): Fixed fctcl_val2 so it will return a default value if the
   option was not specified on the command line.


Whats new in FCTX 1.2
---------------------

Highlights for this release include access to a command line parser for each
EXE built with FCTX. You are now able to customize your command line to add
flags that you may require for unit testing. To help you utilize any custom
flags, conditional tests and tests suites where also added.  These changes were
designed to help you run a "quick set" of tests while in development mode, but
allowing you run a full suite of tests during your continuous builds.

 - ENH: (sys-command-line-parser) ability to parse and read command line
   options.
 - ENH: (sys-conditional-test-runs): ability to run test suites based on a
   conditional. See FCT_FIXTURE_SUITE_BGN_IF and FCT_SUITE_BGN_IF macros.
 - ENH: (sys-conditional-test-runs): ability to run tests based on a 
   conditional. See new FCT_TEST_IF and FCT_QTEST_IF macros.
 - ENH: (sys-clean-up-variables): moved extra variables into a single
   structure used throughout the FCTX test run, this helps to reduce the noise
   in a debugger watch windows.
 - FIX: (486457) #pragma down to warning level 3 for MSC during FCTMF calls.
 - FIX: (501472) CMAKE now configures MSC to compile with /W4. 
 - FIX: (501474) GCC now compiles with higher warning levels
 - FIX: (501476) Removed redundant count found in FCT_END.
 - FIX: (512202) Fixed test_chk failures in CTEST due to trying to configure
   CMAKE to handle multiple platforms and compilers. Adds a new
   FCT_EXPECTED_FAILURES macro that has the program return 0 if the expected
   number of failures matches the actual. 

More details at: https://launchpad.net/fctest/+milestone/1.2
See also: http://fctx.wildbearsoftware.com



Whats new in FCTX 1.1.4
-----------------------

 - FIX (499089): Handle last character truncation in prefix filter.  Turns out
   that a string buffer was missing a +1 for the null terminator.  Also added
   new test_fctkern as a place to start testing the fctkern object. Thanks to
   Roel Schroeven for finding this bug.

Whats new in FCTX 1.1.3
-----------------------

 - FIX (482943): handle 64 bit variables. Thanks to Raedwulf for pointing out
   that the current fct_(x)chk functions may truncate a 64 bit pointer and
   erroneously report false for a true result.

Whats new in FCTX 1.1.2
-----------------------

 - FIX: memory leak in fct_standard_logger_t. 

Whats new in FCTX 1.1.1
-----------------------
 
 - PROJECT: Rename from "FCTest" to "FCTX". The term "FCTest" clashes too much
   on the net, and things with "x" in it are cool. ;-P
 - ENH: FCTMF - Removed need to call FCTMF_SUITE_DEF. The macro will remain for
   backwards compatibility.

Whats new in FCT 1.1
--------------------

 - Addition of fct_xchk: Allows you to customize your checking and error
   reporting. Implementation of fct_chk_eq_str/int/dbl based on the fct_xchk
   interface.
 - CMAKE used for building the FCT tests.
 - Updated all compiles to use the highest warning level and fixed compiler
   warnings.
 - Removed all "assert out of memory" checks and properly checked the memory
   through the entire lifetime of the execution branch.
 - Added fct_req: Function will abort a test block when the requirement is not
   met.
 - Modified fct_chk: Will continue after a failed test.
 - Modified standard logger output to provide a straight continuous line of
   PASS/FAIL statements. Easier to scan failures.
 - BLUEPRINT: sys-multi-file. Better, more robust multi-file support. Although
   it starts to take a toll on the time to code for FCTest, it does help
   provide it a little more extendability to FCTest.
 - Modified failure output to hopefully be less likely to wrap around by using
   a new line to actually show what failed.
 - Start to develop API documentation.
 - #376783: Added test to make sure we continue to compile against a C++
   project.
 - #398286: Fixed to use _vsnprintf for Microsoft compilers.

Whats new in FCT 1.0.4
----------------------

 - Bring down select changes from 1.1 Release Branch:
     - Modified standard logger output to provide a straight continuous line of
       PASS/FAIL statements. Easier to scan failures.
     - Modified failure output to hopefully be less likely to wrap around by
       using a new line to actually show what failed.
     - #376783: Added test to make sure we continue to compile against a C++
       project.
     - #398286: Fixed to use _vsnprintf for Microsoft compilers.

Whats new in FCT 1.0.3
----------------------

 -  #385063: Call free on fct_test_t.

Whats new in FCT 1.0.2
----------------------

 - #382628: Fix tests so tear-down gets executed. Added test case.

Whats new in FCT 1.0.1
----------------------

 - #376783: Applied proper casting so the header works within a C++ project. 
